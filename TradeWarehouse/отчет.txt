Артикул:
	Необходимо использовать библиотеку Ulid в качестве уникальных записей арткулей.
	Для использования библиотеки Ulid подключаю через терминал(в дериктории проекта) командой: "dotnet add package Ulid --version 1.3.3"
	Пришлось изменить файл .csproj чтобы сработала библиотека, добавил такую запись:
		<ItemGroup>
			<PackageReference Include="Ulid" Version="1.3.3" />
		</ItemGroup>
	Различие Ulid и GUID в сортировке.
	Поля article теперь имеют тип Ulid
	Сделал проверку метода FillFromLine (в классах Product, AcceptanceActs.Lines, Documents.Lines) на преобразования артикула в Ulid формат.
	[Ulid]Проблема - 26 символов.

Метод FileaWorker.WriteObjectToFile:
	Добавил проверку на последний символ.
	Чтобы при добавлении объекта в файл не было склеиваний двух строк (избежание проблем(ошибка кол-во аргументов) с чтением файла).

Список файла с арткулами Ulid:
	Пытался сделать автоматический артикул(при добавление товара в файл) на инкремент последнего артикула из сортированного списка товаров.
	Узнал количество тиков объекта Ulid(для универсального числа), однако после получения этого числа попытка вернуть в формат Ulid не удалась.

Sort() из List:
	В класс Product подключил интерфейс IComparable и реализовал сортировку по полю article
	В класс AcceptanceActs.Headers подключил интерфейс IComparable и реализовал сортировку по полю number
	В класс Documents.Headers подключил интерфейс IComparable и реализовал сортировку по полю number
	
Реализовал методы Headers.Register(Headers header, List<Lines> listLines), где header - это кого добавить, а listLines - это добавить список записей.
Обязательно оба должны быть не null, в противном случае функции завершат работу.
(Добавление в таблицу одного Заголовка и несколько записей Строки).
Реализация:
	AcceptanceActs.
		[Номер] - номер последнего элемента списка Headers + 1;
		[Дата] - сегодня;
		[Поставщик] - из списка поставщиков, в противном случае поставщик из header добавляется в базу поставщиков;
		Затем для каждого номера из списка listLines присвается [номер] header;
		Создается список lines из базы AcceptanceActs.Lines, добвляются все элементы из списка listLines;
		Нахожу общую [выходную] и [входную] сумму с помощью статической функции Lines.TotalInputAmount(header.number, lines) и Lines.TotalOutputAmount(header.number, lines), затем присваиваю их header'у;
		Добавляю Заголовок[header] и несколько Строк[listLines] в свои таблицы;
		Под конец метода создается список listProducts из базы Products,
			Двойной цикл, один для lines, другой для listProducts:
				Если артикул и цена совпали, то текущее количество у продукта меняется на количество товаров в строк.
			После цикла listProducts проверяется:
				Если артикулы совпали, но не совпала цена, то объект[header] перезапишется в базе,
				иначе если ничего не совпало то объект[header] добавится в конец базы (использовал флаг и также сохранял индекс, если объект нужно перезаписать).
	Documents.
		[Номер] - номер последнего элемента списка Headers + 1;
		[Дата] - текущая;
		[Получатель] - из списка получателей, иначе получатель из header добавляется в базу получателей(Delivereres);
		Список "Строки" - артикул из базы Продуктов и [количество](Строки) не должно превышать [текущему количеству](Продукта)
		